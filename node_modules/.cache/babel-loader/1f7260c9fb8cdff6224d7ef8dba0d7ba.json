{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/orodeji/Documents/enyo_frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Row from 'react-bootstrap/Row';\nimport HeaderComponent from './Components/HeaderComponent';\nimport UserCards from './Components/UserCards';\nimport { useEffect, useState } from 'react';\nimport CardList from './Components/CardList';\nimport ReactPaginate from 'react-paginate';\nimport Pagination from '@material-ui/lab/Pagination';\n\nfunction App() {\n  _s();\n\n  const [apiResponse, setapiResponse] = useState([]);\n  const [searchField, setsearchField] = useState(\"\");\n  const [offset, setoffset] = useState(0);\n  const perPage = 20;\n  const [currentPage, setcurrentPage] = useState(0);\n  const [sliceVal, setsliceVal] = useState([]);\n  const [pageCount, setpageCount] = useState(1);\n  useEffect(() => {\n    fetch('https://api.enye.tech/v1/challenge/records').then(response => response.json()).then(users => {\n      setapiResponse(users.records.profiles);\n    });\n  }, []);\n  const filteredRecords = apiResponse.filter(records => {\n    return records.FirstName.toLowerCase().includes(searchField.toLowerCase());\n  });\n  useEffect(() => {\n    const data = filteredRecords;\n    const slice = data.slice(offset, offset + perPage);\n    setsliceVal(slice);\n    setpageCount(Math.ceil(data.length / perPage));\n  }, [apiResponse]);\n  useEffect(() => {\n    const data = filteredRecords;\n    setoffset(0);\n    console.log(data);\n    const slice = data.slice(offset, offset + perPage);\n    setsliceVal(slice);\n    setpageCount(Math.ceil(data.length / perPage));\n  }, [searchField]);\n  useEffect(() => {\n    const data = filteredRecords;\n    const slice = data.slice(offset, offset + perPage);\n    setsliceVal(slice);\n    setpageCount(Math.ceil(data.length / perPage));\n  }, [offset, perPage]);\n\n  function handlePageClick(e) {\n    const selectedPage = e.selected;\n    const offset = selectedPage * perPage;\n    setcurrentPage(selectedPage);\n    setoffset(offset);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(HeaderComponent, {\n      inputChange: searchField => setsearchField(searchField)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      records: sliceVal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"o5ZWD3apsOJvKQ9m486AZ8KyLGM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/orodeji/Documents/enyo_frontend/src/App.js"],"names":["Row","HeaderComponent","UserCards","useEffect","useState","CardList","ReactPaginate","Pagination","App","apiResponse","setapiResponse","searchField","setsearchField","offset","setoffset","perPage","currentPage","setcurrentPage","sliceVal","setsliceVal","pageCount","setpageCount","fetch","then","response","json","users","records","profiles","filteredRecords","filter","FirstName","toLowerCase","includes","data","slice","Math","ceil","length","console","log","handlePageClick","e","selectedPage","selected","maxWidth"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Row from 'react-bootstrap/Row'\nimport HeaderComponent from './Components/HeaderComponent';\nimport UserCards from './Components/UserCards'\nimport { useEffect, useState } from 'react';\nimport CardList from './Components/CardList';\nimport ReactPaginate from 'react-paginate';\nimport Pagination from '@material-ui/lab/Pagination';\n\n\nfunction App() {\n  const [apiResponse, setapiResponse] = useState([]);\n  const [searchField, setsearchField] = useState(\"\");\n  const [offset, setoffset] = useState(0);\n  const perPage = 20\n  const [currentPage, setcurrentPage] = useState(0)\n  const [sliceVal, setsliceVal] = useState([])\n  const [pageCount, setpageCount] = useState(1)\n\n  useEffect(() => {\n    fetch('https://api.enye.tech/v1/challenge/records')\n      .then(response=> response.json())\n      .then(users => {setapiResponse(users.records.profiles)});\n  }, [])\n\n  const filteredRecords = apiResponse.filter(records =>{\n    return records.FirstName.toLowerCase().includes(searchField.toLowerCase());\n  })\n\n  useEffect(() =>{\n    const data = filteredRecords;\n    const slice = data.slice(offset, offset + perPage)\n    setsliceVal(slice) \n    setpageCount(Math.ceil(data.length / perPage))\n  },[apiResponse])\n  \n  useEffect(() =>{\n    const data = filteredRecords;\n    setoffset(0)\n    console.log(data)\n    const slice = data.slice(offset, offset + perPage)\n    setsliceVal(slice) \n    setpageCount(Math.ceil(data.length / perPage))\n  },[searchField])\n\n  useEffect(() => {\n    const data = filteredRecords;\n      const slice = data.slice(offset, offset + perPage)\n      setsliceVal(slice)\n      setpageCount(Math.ceil(data.length / perPage))\n  },[offset,perPage])\n\n  function handlePageClick (e) {\n    const selectedPage = e.selected;\n    const offset = selectedPage * perPage;\n    setcurrentPage(selectedPage);\n    setoffset(offset);\n    }\n\n  return (\n    <div style={{maxWidth:\"100%\"}}>\n          <HeaderComponent inputChange={(searchField)=> setsearchField(searchField)}/>\n          <CardList records={sliceVal}/>\n\n\n\n          {/* <ReactPaginate\n                    previousLabel={\"prev\"}\n                    nextLabel={\"next\"}\n                    breakLabel={\"...\"}\n                    breakClassName={\"break-me\"}\n                    pageCount={pageCount}\n                    marginPagesDisplayed={4}\n                    pageRangeDisplayed={pageCount}\n                    onPageChange={handlePageClick}\n                    containerClassName={\"pagination\"}\n                    subContainerClassName={\"pages pagination\"}\n                    activeClassName={\"active\"}/> */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}