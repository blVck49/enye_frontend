{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/orodeji/Documents/enyo_frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Row from 'react-bootstrap/Row';\nimport HeaderComponent from './Components/HeaderComponent';\nimport UserCards from './Components/UserCards';\nimport { useEffect, useState } from 'react';\nimport CardList from './Components/CardList';\nimport ReactPaginate from 'react-paginate';\n\nfunction App() {\n  _s();\n\n  const [apiResponse, setapiResponse] = useState([]);\n  const [searchField, setsearchField] = useState(\"\");\n  useEffect(() => {\n    fetch('https://api.enye.tech/v1/challenge/records').then(response => response.json()).then(users => setapiResponse(users.records.profiles));\n  }, []);\n  const filteredRecords = apiResponse.filter(records => {\n    return records.FirstName.toLowerCase().includes(searchField.toLowerCase());\n  });\n  const [pagination, setPagination] = useState({\n    data: filteredRecords,\n    offset: 0,\n    numberPerPage: 10,\n    pageCount: 0,\n    currentData: []\n  });\n  useEffect(() => {\n    setPagination(prevState => ({ ...prevState,\n      pageCount: prevState.data.length / prevState.numberPerPage,\n      currentData: prevState.data.slice(pagination.offset, pagination.offset + pagination.numberPerPage)\n    }));\n  }, [pagination.numberPerPage, pagination.offset]);\n\n  const handlePageClick = event => {\n    const selected = event.selected;\n    const offset = selected * pagination.numberPerPage;\n    setPagination({ ...pagination,\n      offset\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(HeaderComponent, {\n      inputChange: searchField => setsearchField(searchField)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), pagination.currentData && pagination.currentData.map((records, i) => /*#__PURE__*/_jsxDEV(UserCards, {\n      firstname: records[i].FirstName,\n      lastname: records[i].LastName,\n      gender: records[i].Gender,\n      latitude: records[i].Latitude,\n      longitude: records[i].Longitude,\n      creditcardnumber: records[i].CreditCardNumber,\n      creditcardtype: records[i].CreditCardType,\n      email: records[i].Email,\n      domainname: records[i].DomainName,\n      phonenumber: records[i].PhoneNumber,\n      macaddress: records[i].MacAddress,\n      url: records[i].URL,\n      username: records[i].UserName,\n      lastlogin: records[i].LastLogin,\n      paymentmethod: records[i].PaymentMethod\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: 'previous',\n      nextLabel: 'next',\n      breakLabel: '...',\n      pageCount: pagination.pageCount,\n      marginPagesDisplayed: 2,\n      pageRangeDisplayed: 5,\n      onPageChange: handlePageClick,\n      containerClassName: 'pagination',\n      activeClassName: 'active'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9fbc8tE9yod8t6Bl9vJjhf/1luE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/orodeji/Documents/enyo_frontend/src/App.js"],"names":["Row","HeaderComponent","UserCards","useEffect","useState","CardList","ReactPaginate","App","apiResponse","setapiResponse","searchField","setsearchField","fetch","then","response","json","users","records","profiles","filteredRecords","filter","FirstName","toLowerCase","includes","pagination","setPagination","data","offset","numberPerPage","pageCount","currentData","prevState","length","slice","handlePageClick","event","selected","maxWidth","map","i","LastName","Gender","Latitude","Longitude","CreditCardNumber","CreditCardType","Email","DomainName","PhoneNumber","MacAddress","URL","UserName","LastLogin","PaymentMethod"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Row from 'react-bootstrap/Row'\nimport HeaderComponent from './Components/HeaderComponent';\nimport UserCards from './Components/UserCards'\nimport { useEffect, useState } from 'react';\nimport CardList from './Components/CardList';\nimport ReactPaginate from 'react-paginate';\n\n\nfunction App() {\n  const [apiResponse, setapiResponse] = useState([])\n  const [searchField, setsearchField] = useState(\"\")\n  \n  useEffect(() => {\n    fetch('https://api.enye.tech/v1/challenge/records')\n      .then(response=> response.json())\n      .then(users => setapiResponse(users.records.profiles));\n  }, [])\n\n  const filteredRecords = apiResponse.filter(records =>{\n    return records.FirstName.toLowerCase().includes(searchField.toLowerCase());\n  })\n\n  const [pagination, setPagination] = useState({\n    data: filteredRecords,\n    offset: 0,\n    numberPerPage: 10,\n    pageCount: 0,\n    currentData: []\n  });\n  useEffect(() => {\n    setPagination((prevState) => ({\n      ...prevState,\n      pageCount: prevState.data.length / prevState.numberPerPage,\n      currentData: prevState.data.slice(pagination.offset, pagination.offset + pagination.numberPerPage)\n    }))\n  }, [pagination.numberPerPage, pagination.offset])\n  const handlePageClick = event => {\n    const selected = event.selected;\n    const offset = selected * pagination.numberPerPage\n    setPagination({ ...pagination, offset })\n  }\n  \n  return (\n    <div style={{maxWidth:\"100%\"}}>\n          <HeaderComponent inputChange={(searchField)=> setsearchField(searchField)}/>\n          {/* <CardList records= {filteredRecords}/> */}\n          {pagination.currentData && pagination.currentData.map(((records, i) => (\n            <UserCards key = {i}  \n                      firstname={records[i].FirstName} \n                      lastname={records[i].LastName}\n                      gender={records[i].Gender}\n                      latitude={records[i].Latitude}\n                      longitude={records[i].Longitude}\n                      creditcardnumber={records[i].CreditCardNumber}\n                      creditcardtype={records[i].CreditCardType}\n                      email={records[i].Email}\n                      domainname={records[i].DomainName}\n                      phonenumber={records[i].PhoneNumber}\n                      macaddress={records[i].MacAddress}\n                      url={records[i].URL}\n                      username={records[i].UserName}\n                      lastlogin={records[i].LastLogin}\n                      paymentmethod={records[i].PaymentMethod}\n                      />\n          )))\n          }\n          <ReactPaginate\n            previousLabel={'previous'}\n            nextLabel={'next'}\n            breakLabel={'...'}\n            pageCount={pagination.pageCount}\n            marginPagesDisplayed={2}\n            pageRangeDisplayed={5}\n            onPageChange={handlePageClick}\n            containerClassName={'pagination'}\n            activeClassName={'active'}\n          />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}